Python Django Frame work with PostgreSQL DB.


1. Authenticate:

https://ws.test.acprailinternational.com/method=ACP_authenticateRQ


<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2007 sp2 (http://www.altova.com)-->
<ACP_AuthenticateRQ Version="1.0" xsi:schemaLocation="http://www.acprailinternational.com/API/R2 ACP_AuthenticateRQ.xsd" xmlns="http://www.acprailinternational.com/API/R2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<UserAccount UserID="RTG-XML" Password="RTG-XML"/>
</ACP_AuthenticateRQ>
	

This needs to be called every time before calling Availability... ignore the response.


1. Availability



URL: https://ws.test.acprailinternational.com/method=ACP_RailAvailRQ

RAW XML:

<ACP_RailAvailRQ xmlns="http://www.acprailinternational.com/API/R2" ResponseType="Native-Availability">
  <POS>
    <RequestorID>RTG-XML</RequestorID>
  </POS>
  <RailAvailInfo>
    <OriginDestinationSpecifications>
      <OriginLocation LocationCode="7000123"/>
      <DestinationLocation LocationCode="7000008"/>
      <Departure DepartureDate="2017-06-16T09:15:00"/>
    </OriginDestinationSpecifications>
    <PassengerSpecifications>
      <PassengerType Age="-1" Quantity="3"/>
    </PassengerSpecifications>
    <FareQualifier RateCategory="Regular"/>
    <ResponsePtPTypes>
      <ResponsePtPType>TW</ResponsePtPType>
    </ResponsePtPTypes>
  </RailAvailInfo>
</ACP_RailAvailRQ>

The RAW XML DATA should be submitted by POST to the URL above and it will return train tickets availability.

See the samples 


2. Booking

URL: https://ws.test.acprailinternational.com/method=ACP_RailBook

See the samples