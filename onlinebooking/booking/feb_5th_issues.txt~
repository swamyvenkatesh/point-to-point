




There are lot of issues 

1. You are still storing fare data in .txt file. You should remove and get the data from session.(Done)


def getCartProductDetails(ref):
    """
        Cart Product Details Data (For displaying purpose only)
    """
    print "GEt Details"

    result_list_data = []
    with open(os.path.join(settings.MEDIA_ROOT, "result_list.txt"), 'r') as file1:
        result_list_data = pickle.load(file1)

    dic = {}
    for i in result_list_data:
        for j1, j2 in i.items():
            if j1 == 'fareRPHS_List':
                j2 = [int(x.encode('utf-8')) for x in j2]
                if ref in j2:
                    dic[ref] = i['journey_details']
                else:
                    pass
    data = {}
    for i in dic[ref]:
        data = i

    return data


2. For every ticket, Its adding 4 records in database (all the tables) everytime with different sessionID.(Done)

3. In cart_productdetails, You need to get the departure and arrival dates from the selected train.(Done)


  <TrainSegment DepartureDateTime="2019-02-27T08:20:00" ArrivalDateTime="2019-02-27T10:27:00" TrainNumber="0820" JourneyDuration="PT2H7M" TrainServiceType="Train" CrossBorder="false" OperatorName="ATOC">
                                <DepartureStation LocationCode="7000021" Name="London Euston" Country="GB"/>
                                <ArrivalStation LocationCode="7000046" Name="Manchester Piccadilly" Country="GB"/>
                                <RailAmenities>
                                    <RailAmenity Name="VT"/>
                                </RailAmenities>
                                <ClassCodes/>
                            </TrainSegment>


4. I see 404 error on ajax call..(Done)

Not Found: /alltest/child_ages/
[05/Feb/2019 16:00:47] "GET /alltest/child_ages/?child_passenger_ages%5B%5D=15 HTTP/1.1" 404 3259

5. LogDNA integration for logging : we need this if there is no response from API, We will not know the issue.(Pending)






=========================================


I see that in the code, you are capturing only paasport, dob and nationality but we need to capture below fields(pendinging).

 

PassportRequired="false"

DateOfBirthRequired="false"  -  date field

CntryResidenceRequired="false"  à countries dorp down

NationalityRequired="false"  à countries drop down

PlaceOfBirthRequired="false" à text field.

Also on the checkout page, You need to get ticket details from Data base not from session. 

Creating session with uuid in search results only if its not created already so that we can add multiple tickets to the shopping cart. This allows us to add multiple tickets to the Cart.(Done)

Add button “continue shopping” on checkout page. This will link to the index page.(Done)

======================================================





You will not be storing sessions in DB...

 

    All you have to do is on search results view to create session and set it in session if its not exists already.

 

If request.session.get ("sessionid”) is None:
    uuid_id = str(uuid.uuid4())
    print uuid_id
   request.session[‘sessionid’] = uuid_id

    # print str(uuid.uuid4())
    print "-----"*20
    print request.session.session_key
"

 

    Yes you can add multiple tickets to the cart under same sessionid. If the request.session[“sessionid”] does not exist then you will create a uuid and set it in session. Same code above .
    -- When clicking on Continue Shopping button on checkout page , it will redirect to index page. we can able to search for new trains then and you will create new session only if it doesn’t exist  and 2nd ticket will be added under the same sessionid.

 

    same code above

 

    on Checkout page, You need to retrieve cart data and other data from database will be retrived based on sessionid (request.sesssion[“sessionid”]

 

    When you delete the product on checkout page by clicking “delete” button then you will delete that ticket info from Database based on sessionid and cartid.(Done)


11572865-87aa-4394-b7ab-9c8266e3065d

=========================================================================================



    This code should be in loop to insert multi journeysegments if the route contains multiple journeysegment trains..(DOne)

 

Check  chichster to Delamere where you get multiple journeysegments. Attached is the screenshot.

 

 

   productDetails = CartProductDetails.objects.create(

        cart_product_id=cartProductId, from_station=str(prodDetails['dept_station']),

        to_station=str(prodDetails['arr_station']), from_code=str(prodDetails['dept_station_code']),

        to_code=str(prodDetails['arr_station_code']),

        departure_date=depDateTime, arrival_date=arrDateTime, train=str(prodDetails['train']),

        train_category=str(fare_class))

 

    In Attached the 2nd screenshot, Destination is wrong. Destinatin should be displayed as Delamere ( you should always take the To station from last segment in the JourneySegments) (Done)

 

 

    In the latest models file I sent you new fields were added. Please make sure you have updated these files.(Done)

 


  product_name à insert  From station – To station (for e.g. London St Pancras Int - Paris Nord) (Done)

    fare à Name of the Fare (Done)

    service à Class

    Rule à Sale condition -- (Done)

    start_date à DepartureDate (pending)

    passengers_num à Total Number of Passengers

    status = 0

    settlementprice à Gross Price 


=-==================================================================

Most of the stuff looks OK.. I found one scenario where duration is calculating wrong.

Can you add the sales condition icon and description on mouseover?

when there are multi trains.... Always "To City" should be from the last train. See the screenshots.(Done)

============================================================    feb 11th    ======================================================

There was an error while inserting data into database same error as I sent you on friday... I have updated views.py and please use the latest views.py


1. SaleCondition icon on tickets page not working.(need yo check)

2. SaleCondtions -- Hardcoded while inserting in database(pending)

3. cartProductPassengers -- Child Age is not inserting.. Its inserting as -1()

4. checkout page -- Chichester to Delamere is one product but you are displaying this as multiple products... I think UI needs to be changed .
(Need to ask )

==================================================================================================
								16th Feb 2019
====================================================================================================
Please fix these issues.

1. If there is a record in cart model for that particular session, then we should not create record again .. we just need to use the existing cart object


2. check out page -- You are showing data from session before storing data into cart models.  But you have to storing data then  you need to get all the product details based on session id from tables cart, cartproducts, cartproductdetails and cartproductpassengers.

same issue when you delete cart object, once you delete product from cart tables, you need to retrive data based on session and display on the page.

3. summary1 and summary2 -- same issues you have to get the data from database based on sessionid, currently you are all the data from cart objects and displaying.

4. Check Paris to Venice , Duration showing wrong on ticket page, because when you calculate duration, you shoud take into account Arrivaldatetime and Departuredatetime. You are only considering  times which will be wrong for Night trains.



 ========================================================== 22nd and before22nd - 2019 ==========================

I have tested this .. I see that you have added trainnum in javascript function on the price click.... but you are not getting trainnum from request and filtering the selected train . Its always storing the last trainnum in the database.

Also I have said that you need to filter selected train based on train#, Fare (productname that we display), class of service. not the price. Problem is what if there are 2 productnames which are different but with same price under the same train. So please add the productname also in the javascript. You need to filter it after submitting to the next page this is not happing currently.

Call me please .. we have to fix this tonight.

--------------------

For the route Chichester to Delamere, Its returning fares for third train as per the logs. But it shows the fares for 1st train which is completely wrong. Attached is the screenshot.  

I think we have a complicated the result_list, instead of storing the journeys, fares separately... We should have built one object  with the hierarchy Jouneys --> journey --> fares and segments

This way once we know which journey user selects, then easily get that journey, and filter the product and fareclass within the journey.

Please look into it to simplify.

===============================24th =====

You should keep fare details outside journey details because fare applicable for all the segments not individually.

When you are building the journeys .. add index number and you go by this index number itself instead of train . This will solve the problem.

Index number at the journey level not at the segment  level.
You have already had index number. You will go by this index number.

You also have to add the following outside journey details.

Originlocation
Destination location
Departure date time
Arrival date time

---
3rd train should have the fares. Your output file is not good. You should have Fares list under each train (not under train segments, above train segments)

Fares should be the list .. it will be same as XML response. Check other routes London to Paris where you get fares for all the trains.

=========================== 26th

Prices displaying wrong.. First Class pricing showing for standard and vice versa.

Below is the dictionary you built... This is showing the pricing correctly.


I am not sure when we hit the booking API.. we need to finish this asap.


================================== Booking APi ==========================


1. You just need to build the request as XML string by parsing Railavail XML response.
2. We have to store FareReference for selected Train in the database (cartproducts), so that we can retrieve the Fare XML from RailAvail response. 
3. Journey Information also can be retrived based on FareReference from RailAvail XML response.

4. Passenger Information should be retrieved from Database.

=============================== March 4th ==================


As I said earlier, In case of multi segment trains... its possible that more than one journey can have starting train same . In this case when user selects one train, there are chances that We might add the wrong ticket into the cart. To avoid this issue.. You need to go by fareRefer instead of train number. 

In the Javascript, when user selects fare, pass fareRefer instead of train number and filter the selected train based on fareRefer. 

Whats the status on Boking API... it has been weeks now. I will be out for a week next week... so it will be an issue.

Attached is the scenario where starting train is same for more than one journey.

===================March 6th======


I have sent the feedback with changes for Booking API
 
We have to store JourneyIndex and fareRefer in cartproducts table.
When you are getting Journey and fare info for Booking API, You need to get this data based on JourneyIndex and Farerefer from DB. Currently you are getting from session and building the Book API which is incorrect
---
def bookAPI_call(request):
    ''' Booking API Request '''
    journey_data = fare_data = ""
    fare_val = request.session.get('fare_val')  -- This should be FareRefer from DB not the price. thats the reason I said we need to store fareRefer in cartproducts.
    train_no = request.session.get('train') -- This should be from DB not from session.

---

Store jounreyIndex in cartproducts and get the xml data based on JourneyIndex not by Train.
